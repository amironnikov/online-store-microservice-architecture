server:
  port: 8083

spring:
  application:
    name: order-service
  r2dbc:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}

grpc:
  client:
    products-grpc-service:
      address: ${SPRING_GRPC_ADDRESS}
      negotiationType: "PLAINTEXT"

eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/

resilience4j:
  ratelimiter:
    instances:
      rps_limiter:
        limitForPeriod: 2
        limitRefreshPeriod: 1s
        timeoutDuration: 0s
  circuitbreaker:
    configs:
      default:
        slidingWindowType: COUNT_BASED
        failureRateThreshold: 50
        slidingWindowSize: 10
        waitDurationInOpenState: 10s
        minimumNumberOfCalls: 10
        ringBufferSizeInHalfOpenState: 5
        ringBufferSizeInClosedState: 5
    instances:
      products_circuit_breaker:
        baseConfig: default

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    root: INFO
    ru.amironnikov: DEBUG